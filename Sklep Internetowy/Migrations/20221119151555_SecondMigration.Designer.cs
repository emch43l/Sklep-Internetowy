// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sklep_Internetowy.Models.Contexts;

#nullable disable

namespace SklepInternetowy.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221119151555_SecondMigration")]
    partial class SecondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Sklep_Internetowy.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Uid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Sklep_Internetowy.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 11, 19, 16, 15, 54, 919, DateTimeKind.Local).AddTicks(9958),
                            Description = "Romper 7,9%",
                            Name = "Pwio",
                            Price = 2m
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 11, 19, 16, 15, 54, 919, DateTimeKind.Local).AddTicks(9997),
                            Description = "Eskimo 0,5 38%",
                            Name = "Wódka",
                            Price = 29m
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 11, 19, 16, 15, 54, 919, DateTimeKind.Local).AddTicks(9999),
                            Description = "Lays zielona cebulka",
                            Name = "Czipsy",
                            Price = 5m
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 11, 19, 16, 15, 54, 920, DateTimeKind.Local).AddTicks(1),
                            Description = "Samsung 18650 3,7V MAX 20A, 3100 mAh",
                            Name = "Bateria",
                            Price = 25m
                        });
                });

            modelBuilder.Entity("Sklep_Internetowy.Models.Image", b =>
                {
                    b.HasOne("Sklep_Internetowy.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Sklep_Internetowy.Models.Product", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
